{"version":3,"sources":["Assets/images/sheares-hall-logo.png","Assets/images/rag.png","components/headerComponent/header.js","components/footerComponent/footer.js","components/pages/homepage.js","components/pages/login.js","components/headerComponent/adminheader.js","components/pages/admin.js","components/pages/logout.js","components/pages/settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","loggedIn","localStorage","getItem","state","className","src","Logo","height","alt","to","React","Component","Footer","Homepage","Rag","width","Login","username","password","onChange","bind","submitForm","e","this","setState","target","name","value","preventDefault","setItem","onSubmit","type","placeholder","AdminHeader","classname","Admin","Logout","redirect","removeItem","id","setTimeout","clearTimeout","Settings","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e306040e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sheares-hall-logo.31e4fe51.png\";","module.exports = __webpack_public_path__ + \"static/media/rag.13f4793b.png\";","import React from 'react';\r\nimport Logo from '../../Assets/images/sheares-hall-logo.png'\r\nimport './header.css';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n    let loggedIn = true\r\n    if(token==null) {\r\n      loggedIn = false\r\n    }\r\n    this.state={\r\n      loggedIn\r\n    }\r\n  }\r\n  render() {\r\n      return (\r\n        <header>\r\n          <div className=\"logo\">\r\n            <img src={Logo} height=\"100\" alt=\"Sheares Logo\"/>\r\n          </div>\r\n\r\n          <h1 className='hallname'> Sheares Intranet </h1>\r\n          <nav>\r\n            <ul>\r\n              <li className='first'>\r\n                <Link to='/'>Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/Login'>Login</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Rag from '../../Assets/images/rag.png';\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className=\"imgfront\">\r\n        <img src={Rag}  alt=\"Sheares Front\" width=\"100%\" height=\"100%\"/>\r\n        <div className='txt'>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport './login.css'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n    let loggedIn = true\r\n    if(token == null) {\r\n      loggedIn = false\r\n    }\r\n    this.state={\r\n      username:'',\r\n      password:'',\r\n      loggedIn\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this)\r\n    this.submitForm = this.submitForm.bind(this)\r\n  }\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  submitForm(e) {\r\n    e.preventDefault()\r\n    const {username, password} = this.state\r\n    //login function\r\n    if(username=== \"admin\" && password===\"admin\") {\r\n      localStorage.setItem(\"token\", \"sakdnajkdbaSHA256\")\r\n      this.setState({\r\n        loggedIn: true\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    if(this.state.loggedIn) {\r\n      return <Redirect to=\"/admin\"/>\r\n    }\r\n    return (\r\n      <div>\r\n        <h1 className='labels'>Sign in</h1>\r\n        <form className='form1' onSubmit={this.submitForm}>\r\n          <input className='uname1' type=\"text\" placeholder='A01388447' name='username' value={this.state.username} onChange={this.onChange}/>\r\n          <br/>\r\n          <input className='upass1' type=\"password\" placeholder='password' name='password' value={this.state.password} onChange={this.onChange}/>\r\n          <br/>\r\n        <input className='submitbtn' type='submit'/>\r\n        </form>\r\n        <div className='auth-signin'>\r\n                <button className=\"oauth\">Sign in with NUSNET account</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './adminheader.css';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nfunction AdminHeader() {\r\n  return (\r\n    <div classname='adminheader'>\r\n      <h1 className='hallname2'> Welcome Administrator </h1>\r\n      <nav className='nav1'>\r\n        <ul  className='firstName'>\r\n          <li>\r\n            <Link className='log1' to='/settings'>Settings</Link>\r\n          </li>\r\n          <li>\r\n            <Link className='log2' to='/logout'>Logout</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport AdminHeader from '../headerComponent/adminheader'\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n    let loggedIn = true\r\n    if(token == null) {\r\n      loggedIn = false\r\n    }\r\n    this.state={\r\n      loggedIn\r\n    }\r\n  }\r\n  render() {\r\n    if(this.state.loggedIn === false) {\r\n      return <Redirect to='/'/>\r\n    }\r\n    return(\r\n      <div>\r\n        <AdminHeader/>\r\n        <p>Functions are not enabled now. Please hold on for the latest build</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nclass Logout extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    localStorage.removeItem(\"token\")\r\n  }\r\n  state = {\r\n    redirect: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.id = setTimeout(() => this.setState({ redirect: true }), 1200)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.id)\r\n  }\r\n  render() {\r\n    return this.state.redirect? <Redirect to=\"/login\" />\r\n      : (\r\n      <div>\r\n        <p>You have been logged out.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport AdminHeader from '../headerComponent/adminheader'\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n    let loggedIn = true\r\n    if(token == null) {\r\n      loggedIn = false\r\n    }\r\n    this.state={\r\n        loggedIn\r\n    }\r\n  }\r\n  render() {\r\n    if(this.state.loggedIn === false) {\r\n      return <Redirect to='/'/>\r\n    }\r\n    return(\r\n      <div>\r\n        <AdminHeader/>\r\n        <p> Settings goes here </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\nimport Header from './components/headerComponent/header';\nimport Footer from './components/footerComponent/footer';\nimport Homepage from './components/pages/homepage';\nimport Login from './components/pages/login';\nimport Admin from './components/pages/admin';\nimport Logout from './components/pages/logout';\nimport Settings from './components/pages/settings';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header />\n         <Route exact path='/' component={Homepage}/>\n         <Route exact path='/Login' component={Login}/>\n         <Route path='/Admin' component={Admin}/>\n         <Route path='/Settings' component={Settings}/>\n         <Route path='/Logout' component={Logout}/>\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}